---
# RedHat Enterprise Linux 6.0+
name: rhel
platform_pattern: redhat(.*)|centos(.*)
install_helper: anvil.packaging.yum:YumInstallHelper
dependency_handler:
    name: anvil.packaging.yum:YumDependencyHandler
    package_map:
        django: Django
        distribute: python-setuptools
        mysql-python: MySQL-python
        pam: python-pam
        pastedeploy: python-paste-deploy
        pycrypto: python-crypto
        pyflakes: pyflakes
        pylint: pylint
        pyopenssl: pyOpenSSL
        pyparsing: pyparsing
        pysendfile: pysendfile
        pytz: pytz
        sqlalchemy-migrate: python-migrate
    arch_dependent:
    -   selenium
commands:
    service:
        restart: service NAME restart
        start: service NAME start
        status: service NAME status
        stop: service NAME stop
    apache:
        daemon: httpd
    libvirt:
        restart: service libvirtd restart
        status: service libvirtd status
        # This is just used to check that libvirt will work with a given protocol
        verify: virsh -c $VIRT_PROTOCOL uri
    mysql:
        # NOTE: we aren't stopping any sql injection...
        create_db: mysql --user=$USER --password=$PASSWORD -e
                   "CREATE DATABASE $DB CHARACTER SET $CHARACTER_SET;"
        drop_db: mysql --user=$USER --password=$PASSWORD -e
                 "DROP DATABASE IF EXISTS $DB;"
        grant_all: mysql --user=$USER --password=$PASSWORD -e
                   "GRANT ALL PRIVILEGES ON *.* TO '$USER'@'%' IDENTIFIED BY '$PASSWORD'; FLUSH PRIVILEGES;"
        restart: service mysqld restart
        set_pwd: mysql --user=$USER --password=$OLD_PASSWORD -e
                 "USE mysql; UPDATE user SET password=PASSWORD('$NEW_PASSWORD') WHERE User='$USER';  FLUSH PRIVILEGES;"
        daemon: mysqld
    # Pip command varies depending on the distro
    pip: pip-python
    # Where component symlinks will go, the component name will become a directory
    # under this directory where its configuration files will be connected to there
    # actual location.
    base_link_dir: /etc
    rabbit-mq:
        change_password: rabbitmqctl change_password
        restart: service rabbitmq-server restart
        start: service rabbitmq-server start
        status: service rabbitmq-server status
        stop: service rabbitmq-server stop
components:
    cinder:
        action_classes:
            install: anvil.components.cinder:CinderInstaller
            running: anvil.components.base_runtime:OpenStackRuntime
            test: anvil.components.base_testing:PythonTestingComponent
            coverage: anvil.components.base_testing:PythonTestingComponent
            uninstall: anvil.components.base_install:PkgUninstallComponent
        pips:
            - name: hp3parclient
        daemon_to_package:
            all: openstack-cinder
            volume: openstack-cinder
            scheduler: openstack-cinder
            api: openstack-cinder
    cinder-client:
        action_classes:
            install: anvil.components.base_install:PythonInstallComponent
            running: anvil.components.base_runtime:EmptyRuntime
            test: anvil.components.base_testing:PythonTestingComponent
            uninstall: anvil.components.base_install:PkgUninstallComponent
    db:
        action_classes:
            install: anvil.distros.rhel:DBInstaller
            running: anvil.components.db:DBRuntime
            test: anvil.components.base_testing:EmptyTestingComponent
            uninstall: anvil.components.db:DBUninstaller
        packages:
        -   name: mysql
        -   name: mysql-server
    general:
        action_classes:
            install: anvil.components.pkglist:Installer
            running: anvil.components.base_runtime:EmptyRuntime
            test: anvil.components.base_testing:EmptyTestingComponent
            uninstall: anvil.components.pkglist:Uninstaller
        build-requires:
        # Build time dependencies
        -   name: libxml2-devel
            removable: false
        -   name: libxslt-devel
            removable: false
        -   name: mysql-devel
            removable: false
        -   name: postgresql-devel
            removable: false
        -   name: openldap-devel
            removable: false
        -   name: sqlite-devel
            removable: false
        requires:
        -   name: MySQL-python
        # these packages conflict with our deps and must be removed
        conflicts:
        -   name: python-paste-deploy1.5
        -   name: python-nose1.1
        -   name: python-routes1.12
        -   name: python-sphinx10
        -   name: python-webob1.0
    glance:
        action_classes:
            install: anvil.components.glance:GlanceInstaller
            running: anvil.components.glance:GlanceRuntime
            test: anvil.components.glance:GlanceTester
            uninstall: anvil.components.base_install:PkgUninstallComponent
        pips:
        # warlock requires jsonschema>=0.7,<2
        # pip downloads jsonschema-2.0 and
        # then ignores warlock's requirement
        -   name: jsonschema
            version: ">=0.7,<2"
        daemon_to_package:
            api: openstack-glance
            registry: openstack-glance
            scrubber: openstack-glance
    glance-client:
        action_classes:
            install: anvil.components.base_install:PythonInstallComponent
            running: anvil.components.base_runtime:EmptyRuntime
            test: anvil.components.glance_client:GlanceClientTester
            uninstall: anvil.components.base_install:PkgUninstallComponent
    horizon:
        action_classes:
            install: anvil.components.base_install:PythonInstallComponent
            running: anvil.components.horizon:HorizonRuntime
            test: anvil.components.base_testing:PythonTestingComponent
            uninstall: anvil.components.base_install:PkgUninstallComponent
        packages:
        -   name: openstack-dashboard
    django-openstack-auth:
        action_classes:
            install: anvil.components.base_install:PythonInstallComponent
            running: anvil.components.base_runtime:EmptyRuntime
            test: anvil.components.base_testing:EmptyTestingComponent
            uninstall: anvil.components.base_install:PkgUninstallComponent
    keystone:
        action_classes:
            install: anvil.components.keystone:KeystoneInstaller
            running: anvil.components.keystone:KeystoneRuntime
            test: anvil.components.keystone:KeystoneTester
            uninstall: anvil.components.base_install:PkgUninstallComponent
        daemon_to_package:
            all: openstack-keystone
    keystone-client:
        action_classes:
            install: anvil.components.base_install:PythonInstallComponent
            running: anvil.components.base_runtime:EmptyRuntime
            test: anvil.components.base_testing:PythonTestingComponent
            uninstall: anvil.components.base_install:PkgUninstallComponent
    nova:
        action_classes:
            install: anvil.components.nova:NovaInstaller
            running: anvil.components.nova:NovaRuntime
            test: anvil.components.base_testing:PythonTestingComponent
            uninstall: anvil.components.nova:NovaUninstaller
        pips:
        # This seems to be a core dependency for a 'cas' tool
        # so don't try to remove it since it will also remove
        # said 'cas' tool, unfortunately the version of paramiko
        # installed in rhel uses a old version of crypto which
        # other components actually can't use. This sucks...
        -   name: paramiko
        daemon_to_package:
            api: openstack-nova-api
            conductor: openstack-nova-conductor
            consoleauth: openstack-nova-console
            dhcpbridge: openstack-nova-network
            network: openstack-nova-network
            novncproxy: openstack-nova-novncproxy
            scheduler: openstack-nova-scheduler
            spicehtml5proxy: openstack-nova-console
            xvpvncproxy: openstack-nova-console
    nova-client:
        action_classes:
            install: anvil.components.base_install:PythonInstallComponent
            running: anvil.components.base_runtime:EmptyRuntime
            test: anvil.components.base_testing:PythonTestingComponent
            uninstall: anvil.components.base_install:PkgUninstallComponent
    novnc:
        action_classes:
            install: anvil.components.base_install:PythonInstallComponent
            running: anvil.components.base_runtime:EmptyRuntime
            test: anvil.components.base_testing:EmptyTestingComponent
            uninstall: anvil.components.base_install:PkgUninstallComponent
    openstack-client:
        action_classes:
            install: anvil.components.openstack_client:OpenStackClientInstaller
            running: anvil.components.base_runtime:EmptyRuntime
            test: anvil.components.openstack_client:OpenStackClientTester
            uninstall: anvil.components.base_install:PkgUninstallComponent
    oslo-config:
        action_classes:
            install: anvil.components.base_install:PythonInstallComponent
            running: anvil.components.base_runtime:EmptyRuntime
            test: anvil.components.base_testing:PythonTestingComponent
            uninstall: anvil.components.base_install:PkgUninstallComponent
    oslo-incubator:
        action_classes:
            install: anvil.components.base_install:PythonInstallComponent
            running: anvil.components.base_runtime:EmptyRuntime
            test: anvil.components.base_testing:PythonTestingComponent
            uninstall: anvil.components.base_install:PkgUninstallComponent
    quantum:
        action_classes:
            install: anvil.components.quantum:QuantumInstaller
            running: anvil.components.quantum:QuantumRuntime
            test: anvil.components.base_testing:PythonTestingComponent
            coverage: anvil.components.base_testing:PythonTestingComponent
            uninstall: anvil.components.quantum:QuantumUninstaller
        daemon_to_package:
            linuxbridge-agent: openstack-quantum-linuxbridge
            openvswitch-agent: openstack-quantum-openvswitch
            ovs-cleanup: openstack-quantum-openvswitch
            dhcp-agent: openstack-quantum
            l3-agent: openstack-quantum
            rpc-zmq-receiver: openstack-quantum
            server: openstack-quantum
    quantum-client:
        action_classes:
            install: anvil.components.base_install:PythonInstallComponent
            running: anvil.components.base_runtime:EmptyRuntime
            test: anvil.components.base_testing:PythonTestingComponent
            uninstall: anvil.components.base_install:PkgUninstallComponent
    rabbit-mq:
        action_classes:
            install: anvil.components.rabbit:RabbitInstaller
            running: anvil.distros.rhel:RabbitRuntime
            test: anvil.components.base_testing:EmptyTestingComponent
            uninstall: anvil.components.rabbit:RabbitUninstaller
        packages:
        -   name: rabbitmq-server
            # Disable qpidd as these rabbitmq & qpidd conflict
            pre-install:
            -   cmd:
                - service
                - qpidd
                - stop
                ignore_failure: true
            # Also stop it from starting on boot (if rebooted)
            -   cmd:
                - chkconfig
                - qpidd
                - 'off'
                ignore_failure: true
    swift-client:
        action_classes:
            install: anvil.components.base_install:PythonInstallComponent
            running: anvil.components.base_runtime:EmptyRuntime
            test: anvil.components.base_testing:PythonTestingComponent
            uninstall: anvil.components.base_install:PkgUninstallComponent
    openvswitch:
        action_classes:
            install: anvil.components.base_install:PkgInstallComponent
            running: anvil.components.openvswitch:OpenvswitchRuntime
            test: anvil.components.base_testing:EmptyTestingComponent
            uninstall: anvil.components.base_install:PkgUninstallComponent
...
